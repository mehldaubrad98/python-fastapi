options:
  logging: CLOUD_LOGGING_ONLY

steps:
# Enable required APIs first
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'enable-apis'
  args:
  - 'services'
  - 'enable'
  - 'container.googleapis.com'
  - 'compute.googleapis.com'
  - 'cloudbuild.googleapis.com'
  - 'servicenetworking.googleapis.com'

# Add wait step
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'wait-for-api'
  entrypoint: 'sleep'
  args: ['90']
  waitFor: ['enable-apis']

- name: 'ubuntu'
  args: ['ls', '-la']
  waitFor: ['wait-for-api']

# Create GKE Cluster (using existing VPC)
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'create-gke'
  args:
  - container
  - clusters
  - create
  - ${_CLUSTER_NAME}
  - --region=${_REGION}
  - --network=${_VPC_NAME}
  - --subnetwork=private-subnet
  - --enable-private-nodes
  - --master-ipv4-cidr=172.16.0.0/28
  - --enable-ip-alias
  - --num-nodes=3
  - --machine-type=e2-medium
  - --disk-size=100
  - --enable-autoscaling
  - --min-nodes=1
  - --max-nodes=5
  - --node-locations=${_REGION}-a,${_REGION}-b
  - --scopes=https://www.googleapis.com/auth/cloud-platform
  waitFor: ['wait-for-api']

# Build Docker image
- name: 'gcr.io/cloud-builders/docker'
  id: 'build-image'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/fastapi-app:$COMMIT_SHA', '-f', 'Dockerfile', '.']
  waitFor: ['create-gke']

# Push Docker image
- name: 'gcr.io/cloud-builders/docker'
  id: 'push-image'
  args: ['push', 'gcr.io/$PROJECT_ID/fastapi-app:$COMMIT_SHA']
  waitFor: ['build-image']

# Deploy to GKE
- name: 'gcr.io/cloud-builders/gke-deploy'
  args:
  - run
  - --filename=kubernetes/
  - --location=${_REGION}
  - --cluster=${_CLUSTER_NAME}
  - --image=gcr.io/$PROJECT_ID/fastapi-app:$COMMIT_SHA
  waitFor: ['push-image']

images:
- 'gcr.io/$PROJECT_ID/fastapi-app:$COMMIT_SHA'

substitutions:
  _REGION: us-central1
  _CLUSTER_NAME: fastapi-gke-cluster
  _VPC_NAME: fastapi-vpc

timeout: '3600s'
